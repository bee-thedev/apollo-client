[{"/home/beenysh/myprojects/reactapps/apollo-client/src/index.js":"1","/home/beenysh/myprojects/reactapps/apollo-client/src/reportWebVitals.js":"2","/home/beenysh/myprojects/reactapps/apollo-client/src/App.js":"3","/home/beenysh/myprojects/reactapps/apollo-client/src/GraphQL/index.js":"4","/home/beenysh/myprojects/reactapps/apollo-client/src/GraphQL/Queries.js":"5","/home/beenysh/myprojects/reactapps/apollo-client/src/GraphQL/Subscriptions.js":"6","/home/beenysh/myprojects/reactapps/apollo-client/src/GraphQL/Mutations.js":"7","/home/beenysh/myprojects/reactapps/apollo-client/src/GraphQL/apolloSetup.js":"8"},{"size":596,"mtime":1631209930475,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1629913816200,"results":"11","hashOfConfig":"10"},{"size":3071,"mtime":1631209625506,"results":"12","hashOfConfig":"10"},{"size":119,"mtime":1629913816200,"results":"13","hashOfConfig":"10"},{"size":174,"mtime":1629913816200,"results":"14","hashOfConfig":"10"},{"size":166,"mtime":1629913816200,"results":"15","hashOfConfig":"10"},{"size":229,"mtime":1629913816200,"results":"16","hashOfConfig":"10"},{"size":1915,"mtime":1631210105418,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7hiort",{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"/home/beenysh/myprojects/reactapps/apollo-client/src/index.js",[],"/home/beenysh/myprojects/reactapps/apollo-client/src/reportWebVitals.js",[],["37","38"],"/home/beenysh/myprojects/reactapps/apollo-client/src/App.js",["39","40","41","42"],"import React from \"react\";\nimport { useEffect, useState } from 'react'\nimport './App.css';\n\nimport { useQuery } from '@apollo/client'\nimport { LOAD_USERS } from './GraphQL/Queries'\n\nimport { useMutation } from '@apollo/client'\nimport { CREATE_USER_MUTATION } from './GraphQL/Mutations'\n\nimport { useSubscription } from '@apollo/client'\nimport { SUBSCRIBE_USER_ADDED } from \"./GraphQL/Subscriptions\";\n\n\nfunction App() {\n\n  const [users, setUsers] = useState([]);\n  const [form, setForm] = useState({ name: 'aaa', age: 0, married: false });\n\n  // add user using GraphQl Mutation \n  const [createUser, { error: mutationErr }] = useMutation(CREATE_USER_MUTATION)\n  const addUser = () => {\n    console.log(form)\n    createUser({\n      variables: {\n        n: form.name,\n        a: Number(form.age),\n        m: form.married\n      }\n    })\n    if (error) {\n      console.log('Error on Create User....')\n    }\n  }\n\n  // -- GraphQL SUBSCRIPTION -- \n  const { data: userSubsDasta, error: subscriptionError, loading: subscriptionLoader } = useSubscription(SUBSCRIBE_USER_ADDED)\n  useEffect(() => {\n    userSubsDasta && console.log('userSubsDasta: ', userSubsDasta)\n    if (userSubsDasta) {\n      const newAddedUser = userSubsDasta['newUser'];\n      const allusers = [...users];     // old users\n      allusers.unshift(newAddedUser); // push\n      setUsers(allusers)      // re-render\n    }\n    // logic (todo)\n  }, [userSubsDasta]);\n\n    \n\n  // GraphQL Query\n  const { error, loading, data } = useQuery(LOAD_USERS)\n  useEffect(() => {\n    console.log('dataaaa', data)\n    if (data) {\n      setUsers(data['getAllUsers'])\n    }\n  }, [data])\n\n\n  if (loading) {\n    return (<h1>Loading......</h1>)\n  }\n\n  return (\n    <div className=\"App\">\n       <form onChange={({ target }) => {\n        const obj = { ...form };\n        obj[target.name] = (target.name === 'married') ? target.checked : target.value\n        setForm(obj)\n      }} onSubmit={(e) => {\n        e.preventDefault();\n        addUser()\n      }}>\n        <input type=\"text\" name=\"name\" value={form.name} placeholder=\"Name\" />\n        <input type=\"number\" name=\"age\" value={form.age} placeholder=\"Age\" />\n        <input type=\"checkbox\" name=\"married\" checked={form.married} /> Married\n        <input type=\"submit\" value=\"Add\" />\n      </form>\n      <pre>\n        {JSON.stringify(users, null, 2)}\n      </pre>\n    </div>\n  );\n}\n\nexport default App;\n\n// getAllUser By Query\n// Subscription on NewUser\n// Mutation CreateUser\n\n// Mutation DELETE\n// SUBSCRITIOPN DELETE\n\n\n// == CACHING ==\n  //   createUser({\n  //     variables: {\n  //       name: '',\n  //       age: 26,\n  //       married: false\n  //     }, refetechQueries:[{\n  //          query: LOAD_USERS\n  //     }]\n  //   })\n\n  // {\n  //   variables: {},\n  //   update: (store, { data }) => {\n  //     const userData = store.readQuery<UsersQuery>({\n  //       query: ''\n  //     });\n\n  //     store.writeQuery<UsersQuery>({\n  //       query: UsersDocument,\n  //       data: {\n  //         books: [...userData!.users, daya!.createUser]\n  //       }\n  //     })\n  //   }\n  // }","/home/beenysh/myprojects/reactapps/apollo-client/src/GraphQL/index.js",[],"/home/beenysh/myprojects/reactapps/apollo-client/src/GraphQL/Queries.js",[],"/home/beenysh/myprojects/reactapps/apollo-client/src/GraphQL/Subscriptions.js",[],"/home/beenysh/myprojects/reactapps/apollo-client/src/GraphQL/Mutations.js",[],"/home/beenysh/myprojects/reactapps/apollo-client/src/GraphQL/apolloSetup.js",["43"],"import { WebSocketLink } from '@apollo/client/link/ws';\nimport { onError } from '@apollo/client/link/error'\nimport { getMainDefinition } from '@apollo/client/utilities';\nimport {\n    ApolloClient,\n    InMemoryCache,\n    ApolloProvider,\n    HttpLink,\n    from,\n    split\n} from \"@apollo/client\"\n\n\n// use for Pub/Sub (Subscription)\nconst wsLink = new WebSocketLink({\n    uri: process.env.REACT_APP_GRAPHQL_LOCAL_URI,\n    options: {\n        reconnect: true,\n        // connectionParams: {\n        //     authToken: '<authToken>',\n        // }\n    }});\n\nconst httpLink = new HttpLink({\n    uri: process.env.REACT_APP_GRAPHQL_GITHUB_URI,\n});\n\n// https://www.apollographql.com/docs/react/data/error-handling/\nconst errorLink = onError(({ graphqlErrors, networkErrors }) => {\n    if (graphqlErrors) {\n        graphqlErrors.map(({ message, location, path }) => {\n            alert('GraphQL Error: ' + message + location + path);\n        });\n    }\n    \n    // To retry on network errors, we recommend the RetryLink\n    // instead of the onError link. This just logs the error.\n    if (networkErrors) {\n        console.log(`[Network error]: ${networkErrors}`);\n    }\n})\n\n// The split function takes three parameters: (https://www.apollographql.com/docs/react/data/subscriptions/)\n// * A function that's called for each operation to execute\n// * The Link to use for an operation if the function returns a \"truthy\" value\n// * The Link to use for an operation if the function returns a \"falsy\" value\nconst splitLink = split(\n    ({ query }) => {\n        const definition = getMainDefinition(query);\n        return (\n            definition.kind === 'OperationDefinition' &&\n            definition.operation === 'subscription'\n        );\n    },\n    wsLink,\n    httpLink,\n);\n\nconst client = new ApolloClient({\n    cache: new InMemoryCache(),\n    link: from([errorLink, splitLink])\n})\n\n// \n\nexport {\n    ApolloProvider,\n    client\n}",{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":21,"column":31,"nodeType":"50","messageId":"51","endLine":21,"endColumn":42},{"ruleId":"48","severity":1,"message":"52","line":37,"column":39,"nodeType":"50","messageId":"51","endLine":37,"endColumn":56},{"ruleId":"48","severity":1,"message":"53","line":37,"column":67,"nodeType":"50","messageId":"51","endLine":37,"endColumn":85},{"ruleId":"54","severity":1,"message":"55","line":47,"column":6,"nodeType":"56","endLine":47,"endColumn":21,"suggestions":"57"},{"ruleId":"58","severity":1,"message":"59","line":31,"column":57,"nodeType":"60","messageId":"61","endLine":31,"endColumn":59},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'mutationErr' is assigned a value but never used.","Identifier","unusedVar","'subscriptionError' is assigned a value but never used.","'subscriptionLoader' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'users'. Either include it or remove the dependency array.","ArrayExpression",["64"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"65","fix":"66"},"Update the dependencies array to be: [userSubsDasta, users]",{"range":"67","text":"68"},[1404,1419],"[userSubsDasta, users]"]