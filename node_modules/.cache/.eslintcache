[{"/home/beenysh/myprojects/reactapps/apollo-client/src/index.js":"1","/home/beenysh/myprojects/reactapps/apollo-client/src/reportWebVitals.js":"2","/home/beenysh/myprojects/reactapps/apollo-client/src/App.js":"3","/home/beenysh/myprojects/reactapps/apollo-client/src/GraphQL/index.js":"4","/home/beenysh/myprojects/reactapps/apollo-client/src/GraphQL/Queries.js":"5","/home/beenysh/myprojects/reactapps/apollo-client/src/GraphQL/Subscriptions.js":"6","/home/beenysh/myprojects/reactapps/apollo-client/src/GraphQL/Mutations.js":"7","/home/beenysh/myprojects/reactapps/apollo-client/src/GraphQL/apolloSetup.js":"8"},{"size":618,"mtime":1629913816200,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1629913816200,"results":"11","hashOfConfig":"10"},{"size":3037,"mtime":1630162270195,"results":"12","hashOfConfig":"10"},{"size":119,"mtime":1629913816200,"results":"13","hashOfConfig":"10"},{"size":174,"mtime":1629913816200,"results":"14","hashOfConfig":"10"},{"size":166,"mtime":1629913816200,"results":"15","hashOfConfig":"10"},{"size":229,"mtime":1629913816200,"results":"16","hashOfConfig":"10"},{"size":1895,"mtime":1630167367025,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"7hiort",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/beenysh/myprojects/reactapps/apollo-client/src/index.js",[],["36","37"],"/home/beenysh/myprojects/reactapps/apollo-client/src/reportWebVitals.js",[],"/home/beenysh/myprojects/reactapps/apollo-client/src/App.js",["38","39","40","41","42"],"import { useEffect, useState } from 'react'\nimport './App.css';\n\nimport { useQuery, gql } from '@apollo/client'\nimport { LOAD_USERS } from './GraphQL/Queries'\n\nimport { useMutation } from '@apollo/client'\nimport { CREATE_USER_MUTATION } from './GraphQL/Mutations'\n\nimport { useSubscription } from '@apollo/client'\nimport { SUBSCRIBE_USER_ADDED } from './GraphQL/Subscriptions'\n\n\nfunction App() {\n\n  const [users, setUsers] = useState([])\n  const [form, setForm] = useState({ name: 'aaa', age: 0, married: false })\n\n  // add user using GraphQl Mutation \n  const [createUser, { error: mutationErr }] = useMutation(CREATE_USER_MUTATION)\n  const addUser = () => {\n    console.log(form)\n    createUser({\n      variables: {\n        n: form.name,\n        a: Number(form.age),\n        m: form.married\n      }\n    })\n    if (error) {\n      console.log('Error on Create User....')\n    }\n  }\n\n  // -- GraphQL SUBSCRIPTION -- \n  const { data: userSubsDasta, error: subscriptionError, loading: subscriptionLoader } = useSubscription(SUBSCRIBE_USER_ADDED)\n  useEffect(() => {\n    userSubsDasta && console.log('userSubsDasta: ', userSubsDasta)\n    if (userSubsDasta) {\n      const newAddedUser = userSubsDasta['newUser']\n      const allusers = [...users]     // old users\n      allusers.unshift(newAddedUser); // push\n      setUsers(allusers)      // re-render\n    }\n    // logic (todo)\n  }, [userSubsDasta])\n\n  // GraphQL Querry\n  const { error, loading, data } = useQuery(LOAD_USERS)\n  useEffect(() => {\n    console.log('dataaaa', data)\n    if (data) {\n      setUsers(data['getAllUsers'])\n    }\n  }, [data])\n\n\n  if (loading) {\n    return (<h1>Loading......</h1>)\n  }\n\n  return (\n    <div className=\"App\">\n      <form onChange={({ target }) => {\n        const obj = { ...form };\n        obj[target.name] = (target.name === 'married') ? target.checked : target.value\n        setForm(obj)\n      }} onSubmit={(e) => {\n        e.preventDefault();\n        addUser()\n      }}>\n        <input type=\"text\" name=\"name\" value={form.name} placeholder=\"Name\" />\n        <input type=\"number\" name=\"age\" value={form.age} placeholder=\"Age\" />\n        <input type=\"checkbox\" name=\"married\" checked={form.married} /> Married\n        <input type=\"submit\" value=\"Add\" />\n      </form>\n      <pre>\n        {JSON.stringify(users, null, 2)}\n      </pre>\n    </div>\n  );\n}\n\nexport default App;\n\n// getAllUser By Query\n// Subscription on NewUser\n// Mutation CreateUser\n\n// Mutation DELETE\n// SUBSCRITIOPN DELETE\n\n\n// == CACHING ==\n  //   createUser({\n  //     variables: {\n  //       name: '',\n  //       age: 26,\n  //       married: false\n  //     }, refetechQueries:[{\n  //          query: LOAD_USERS\n  //     }]\n  //   })\n\n  // {\n  //   variables: {},\n  //   update: (store, { data }) => {\n  //     const userData = store.readQuery<UsersQuery>({\n  //       query: ''\n  //     });\n\n  //     store.writeQuery<UsersQuery>({\n  //       query: UsersDocument,\n  //       data: {\n  //         books: [...userData!.users, daya!.createUser]\n  //       }\n  //     })\n  //   }\n  // }","/home/beenysh/myprojects/reactapps/apollo-client/src/GraphQL/index.js",[],"/home/beenysh/myprojects/reactapps/apollo-client/src/GraphQL/Queries.js",[],"/home/beenysh/myprojects/reactapps/apollo-client/src/GraphQL/Subscriptions.js",[],"/home/beenysh/myprojects/reactapps/apollo-client/src/GraphQL/Mutations.js",[],"/home/beenysh/myprojects/reactapps/apollo-client/src/GraphQL/apolloSetup.js",["43"],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":4,"column":20,"nodeType":"50","messageId":"51","endLine":4,"endColumn":23},{"ruleId":"48","severity":1,"message":"52","line":20,"column":31,"nodeType":"50","messageId":"51","endLine":20,"endColumn":42},{"ruleId":"48","severity":1,"message":"53","line":36,"column":39,"nodeType":"50","messageId":"51","endLine":36,"endColumn":56},{"ruleId":"48","severity":1,"message":"54","line":36,"column":67,"nodeType":"50","messageId":"51","endLine":36,"endColumn":85},{"ruleId":"55","severity":1,"message":"56","line":46,"column":6,"nodeType":"57","endLine":46,"endColumn":21,"suggestions":"58"},{"ruleId":"59","severity":1,"message":"60","line":31,"column":57,"nodeType":"61","messageId":"62","endLine":31,"endColumn":59},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'gql' is defined but never used.","Identifier","unusedVar","'mutationErr' is assigned a value but never used.","'subscriptionError' is assigned a value but never used.","'subscriptionLoader' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'users'. Either include it or remove the dependency array.","ArrayExpression",["65"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},"Update the dependencies array to be: [userSubsDasta, users]",{"range":"68","text":"69"},[1377,1392],"[userSubsDasta, users]"]